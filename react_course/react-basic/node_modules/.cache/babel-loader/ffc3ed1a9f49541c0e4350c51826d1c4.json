{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\allAboutMe\\\\PersonalStudy\\\\react_course\\\\react-basic\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Movie from './components/Movie';\nimport MovieForm from './components/MovieForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movieTitle, setMovieTitle] = useState(\"\");\n  const [movieYear, setMovieYear] = useState(\"\");\n  const [movies, setMovies] = useState([{\n    title: \"Heath Chang 1\",\n    year: 2001\n  }, {\n    title: \"Heath Chang 2\",\n    year: 2002\n  }, {\n    title: \"Heath Chang 3\",\n    year: 2003\n  }]);\n  const renderMovies = movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      movie: movie\n    }, movie.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  });\n\n  const addMovie = event => {\n    event.preventDefault(); //movies.push() 화면 변화 X: const 배열은 변화한다고 reRendering 되지 않음.  (state아님)\n\n    setMovies([...movies,\n    /*\n      →spread operator\n      객체나 배열을 사용할때 안에 내용 빼오기 \n      eg)\n      a = { b: 1, c: 2 }\n      b = {...a}\n      이렇게 하고 b를 출력하면\n      b= {b:1, c:2}\n    */\n    {\n      title: movieTitle,\n      year: movieYear\n    }]); //입력후 삭제하기. \n\n    setMovieTitle(\"\");\n    setMovieYear(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Heath Chang\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), renderMovies]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZvvZE7aNB7W4XMfMoNjUIAmKlrc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/A/Desktop/allAboutMe/PersonalStudy/react_course/react-basic/src/App.js"],"names":["React","useEffect","useState","Movie","MovieForm","App","movieTitle","setMovieTitle","movieYear","setMovieYear","movies","setMovies","title","year","renderMovies","map","movie","addMovie","event","preventDefault"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CACjC;AAAEU,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,IAAI,EAAE;AADR,GADiC,EAIjC;AAAED,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,IAAI,EAAE;AADR,GAJiC,EAOjC;AAAED,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,IAAI,EAAE;AADR,GAPiC,CAAD,CAApC;AAYA,QAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAE;AACrC,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd,OAA0BA,KAAK,CAACJ,KAAhC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJoB,CAArB;;AAKA,QAAMK,QAAQ,GAAEC,KAAD,IAAS;AACtBA,IAAAA,KAAK,CAACC,cAAN,GADsB,CAEtB;;AACAR,IAAAA,SAAS,CAAC,CACR,GAAGD,MADK;AAER;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AACAE,MAAAA,KAAK,EAAEN,UADP;AAEAO,MAAAA,IAAI,EAAEL;AAFN,KAXQ,CAAD,CAAT,CAHsB,CAkBtB;;AACAD,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GArBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGK,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApDQT,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React,{ useEffect, useState } from 'react';\nimport Movie from './components/Movie'\nimport MovieForm from './components/MovieForm';\n\nfunction App() {\n  const [movieTitle,setMovieTitle]= useState(\"\");\n  const [movieYear,setMovieYear]= useState(\"\");\n  const [movies, setMovies] = useState([    \n      { title: \"Heath Chang 1\",\n        year: 2001  \n      },\n      { title: \"Heath Chang 2\",\n        year: 2002  \n      },\n      { title: \"Heath Chang 3\",\n        year: 2003 \n      }\n    ])\n\n  const renderMovies = movies.map(movie=>{\n    return(\n      <Movie movie={movie} key={movie.title}/>\n    )\n  });\n  const addMovie=(event)=>{\n    event.preventDefault();\n    //movies.push() 화면 변화 X: const 배열은 변화한다고 reRendering 되지 않음.  (state아님)\n    setMovies([\n      ...movies,\n      /*\n        →spread operator\n        객체나 배열을 사용할때 안에 내용 빼오기 \n        eg)\n        a = { b: 1, c: 2 }\n        b = {...a}\n        이렇게 하고 b를 출력하면\n        b= {b:1, c:2}\n      */\n      {\n      title: movieTitle,\n      year: movieYear,\n    }])\n    //입력후 삭제하기. \n    setMovieTitle(\"\");\n    setMovieYear(\"\");\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Heath Chang</h1>\n      <MovieForm/>\n      {renderMovies}\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}