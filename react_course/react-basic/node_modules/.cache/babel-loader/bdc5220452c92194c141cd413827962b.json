{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\allAboutMe\\\\PersonalStudy\\\\react_course\\\\react-basic\\\\src\\\\pages\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MovieForm from './components/MovieForm';\nimport Movie from './components/Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n\n  const removeMovie = id => {\n    setMovies(movies.filter(movie => {\n      return movie.id != id;\n    }));\n  };\n\n  const renderMovies = movies.length ? movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      movie: movie,\n      removeMovie: removeMovie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }) : \"추가된 영화가 없습니다. \";\n\n  const addMovie = movie => {\n    //movies.push() 화면 변화 X: const 배열은 변화한다고 reRendering 되지 않음.  (state아님)\n    setMovies([...movies, movie]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MOVIE LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      addMovie: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), renderMovies]\n  }, void 0, true);\n};\n\n_s(Movies, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/A/Desktop/allAboutMe/PersonalStudy/react_course/react-basic/src/pages/Movies.js"],"names":["React","useEffect","useState","MovieForm","Movie","Movies","movies","setMovies","removeMovie","id","filter","movie","renderMovies","length","map","addMovie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAGA,MAAMC,MAAM,GAAC,MAAI;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,WAAW,GAAEC,EAAD,IAAM;AACtBF,IAAAA,SAAS,CAACD,MAAM,CAACI,MAAP,CAAcC,KAAK,IAAE;AAC7B,aAAOA,KAAK,CAACF,EAAN,IAAYA,EAAnB;AACD,KAFS,CAAD,CAAT;AAGD,GAJD;;AAMA,QAAMG,YAAY,GAAGN,MAAM,CAACO,MAAP,GACnBP,MAAM,CAACQ,GAAP,CAAWH,KAAK,IAAE;AAClB,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAoC,MAAA,WAAW,EAAEH;AAAjD,OAA0BG,KAAK,CAACF,EAAhC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJC,CADmB,GAMnB,gBANF;;AAOA,QAAMM,QAAQ,GAAEJ,KAAD,IAAS;AACtB;AACAJ,IAAAA,SAAS,CAAC,CACR,GAAGD,MADK,EAERK,KAFQ,CAAD,CAAT;AAID,GAND;;AAOA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEI;AAArB;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCH,YAHD;AAAA,kBADF;AAOD,CA9BD;;GAAMP,M;;KAAAA,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React, { useEffect,useState } from 'react';\r\nimport MovieForm from './components/MovieForm';\r\nimport Movie from './components/Movie'\r\n\r\n\r\nconst Movies=()=>{\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const removeMovie=(id)=>{\r\n    setMovies(movies.filter(movie=>{\r\n      return movie.id != id;\r\n    }))\r\n  }\r\n  \r\n  const renderMovies = movies.length\r\n  ? movies.map(movie=>{\r\n    return(\r\n      <Movie movie={movie} key={movie.id} removeMovie={removeMovie}/>\r\n    )\r\n  })\r\n  : \"추가된 영화가 없습니다. \";\r\n  const addMovie=(movie)=>{\r\n    //movies.push() 화면 변화 X: const 배열은 변화한다고 reRendering 되지 않음.  (state아님)\r\n    setMovies([\r\n      ...movies,\r\n      movie\r\n    ])\r\n  }\r\n  return(\r\n    <>\r\n    <h1>MOVIE LIST</h1>\r\n    <MovieForm addMovie={addMovie} />\r\n    {renderMovies}\r\n    </>\r\n  )\r\n}\r\nexport default Movies;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}