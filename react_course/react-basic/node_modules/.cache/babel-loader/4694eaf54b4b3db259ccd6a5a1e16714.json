{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\allAboutMe\\\\PersonalStudy\\\\react_course\\\\react-basic\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Movie from './components/Movie';\nimport MovieForm from './components/MovieForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([{\n    title: \"Heath Chang 1\",\n    year: 2001\n  }, {\n    title: \"Heath Chang 2\",\n    year: 2002\n  }, {\n    title: \"Heath Chang 3\",\n    year: 2003\n  }]);\n\n  const removeMovie = () => {};\n\n  const renderMovies = movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      movie: movie,\n      removeMovie: removeMovie\n    }, movie.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  });\n\n  const addMovie = movie => {\n    //movies.push() 화면 변화 X: const 배열은 변화한다고 reRendering 되지 않음.  (state아님)\n    setMovies([...movies, movie]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Heath Chang\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      addMovie: addMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), renderMovies]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7zT6qqqVuOwkG/BP2DgNzzDAe8w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/A/Desktop/allAboutMe/PersonalStudy/react_course/react-basic/src/App.js"],"names":["React","useEffect","useState","Movie","MovieForm","App","movies","setMovies","title","year","removeMovie","renderMovies","map","movie","addMovie"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CACjC;AAAEM,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,IAAI,EAAE;AADR,GADiC,EAIjC;AAAED,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,IAAI,EAAE;AADR,GAJiC,EAOjC;AAAED,IAAAA,KAAK,EAAE,eAAT;AACEC,IAAAA,IAAI,EAAE;AADR,GAPiC,CAAD,CAApC;;AAWA,QAAMC,WAAW,GAAC,MAAI,CAErB,CAFD;;AAGA,QAAMC,YAAY,GAAGL,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAE;AACrC,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAuC,MAAA,WAAW,EAAEH;AAApD,OAA0BG,KAAK,CAACL,KAAhC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJoB,CAArB;;AAMA,QAAMM,QAAQ,GAAED,KAAD,IAAS;AACtB;AACAN,IAAAA,SAAS,CAAC,CACR,GAAGD,MADK,EAERO,KAFQ,CAAD,CAAT;AAID,GAND;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGH,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCQN,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React,{ useEffect, useState } from 'react';\nimport Movie from './components/Movie'\nimport MovieForm from './components/MovieForm';\n\nfunction App() {\n  const [movies, setMovies] = useState([    \n      { title: \"Heath Chang 1\",\n        year: 2001  \n      },\n      { title: \"Heath Chang 2\",\n        year: 2002  \n      },\n      { title: \"Heath Chang 3\",\n        year: 2003 \n      }\n    ])\n  const removeMovie=()=>{\n    \n  }\n  const renderMovies = movies.map(movie=>{\n    return(\n      <Movie movie={movie} key={movie.title} removeMovie={removeMovie}/>\n    )\n  });\n\n  const addMovie=(movie)=>{\n    //movies.push() 화면 변화 X: const 배열은 변화한다고 reRendering 되지 않음.  (state아님)\n    setMovies([\n      ...movies,\n      movie\n     ])\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Heath Chang</h1>\n      <MovieForm addMovie={addMovie} />\n      {renderMovies}\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}